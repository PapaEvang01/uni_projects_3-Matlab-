Homework 2 – LQR Controller Design for a Second-Order System
---------------------------------------------------
Course: Controllers (University-Level)
Topic: Control Systems + Optimization
Language: MATLAB
------------------------------------------------------------

This project was developed during my university studies as part of the "Controllers" course.

It implements an optimal state-feedback controller using the Linear Quadratic Regulator (LQR) method to 
stabilize a second-order dynamic system modeled after a mass-spring-damper.

📌 Problem Statement:
We are given a continuous-time second-order system of the form:

    y'' + 2ζω_n y' + ω_n² y = u(t)

The goal is to design a controller that:
- Brings the system output y(t) to zero efficiently
- Minimizes both the state error and the control effort

🛠️ Approach:
The system is expressed in state-space form:

    ẋ = A·x + B·u

Then we apply the LQR method to compute an optimal feedback gain K that minimizes the quadratic cost function:

    J = ∫ (xᵀQx + uᵀRu) dt

The resulting control law is:

    u(t) = -K·x(t)

We simulate the closed-loop system using MATLAB's `ode45` solver.

✅ Outcome:
The result is a smooth and stable response with minimal overshoot and small control effort.
The optimized gain matrix K and the final state are saved automatically to a `.txt` log file.

🧰 Tools & Files:
- MATLAB
- State-space modeling
- LQR controller design (`lqr`)
- Numerical simulation (`ode45`)
- Automatic result logging

📄 Files in this project:
- `lqr_controller_design.m` – Main script for LQR setup, simulation, plotting, and saving
- `simulate_lqr_response.m` – Simulates the closed-loop response
- `save_lqr_results.m` – Saves optimal K and final state to a text file
- `lqr_results.txt` – Output file with gain matrix and final state
-  example Output (lqr_results.txt):


This assignment showcases optimal control design using LQR, in contrast to HW1 which explored PID tuning via stochastic optimization (SPSA).
